"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.currentUser = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const firebase_1 = require("../config/firebase");
const not_authorized_error_1 = require("../errors/not-authorized-error");
const currentUser = (req, res, next) => {
    var _a;
    if (!((_a = req.cookies) === null || _a === void 0 ? void 0 : _a.jwt)) {
        return next();
    }
    else {
        try {
            const payload = jsonwebtoken_1.default.verify(req.cookies.jwt, process.env.JWT_KEY);
            req.currentUser = payload;
        }
        catch (err) {
            console.error('currentUserError', err);
        }
    }
    if (!req.headers.authorization) {
        return next();
    }
    else {
        const token = req.headers.authorization.split(' ')[1];
        try {
            const decode = firebase_1.admin.auth().verifyIdToken(token);
            if (decode) {
                console.log('DECODE DATA', decode);
            }
        }
        catch (error) {
            throw new not_authorized_error_1.NotAutherizedError();
        }
    }
    next();
};
exports.currentUser = currentUser;
